System.register(['angular2/src/core/application_ref', 'angular2/src/core/di'], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var application_ref_1, di_1;
    var MockApplicationRef;
    return {
        setters:[
            function (application_ref_1_1) {
                application_ref_1 = application_ref_1_1;
            },
            function (di_1_1) {
                di_1 = di_1_1;
            }],
        execute: function() {
            /**
             * A no-op implementation of {@link ApplicationRef}, useful for testing.
             */
            let MockApplicationRef = class MockApplicationRef extends application_ref_1.ApplicationRef {
                registerBootstrapListener(listener) { }
                registerDisposeListener(dispose) { }
                bootstrap(componentType, bindings) {
                    return null;
                }
                get injector() { return null; }
                ;
                get zone() { return null; }
                ;
                dispose() { }
                tick() { }
                get componentTypes() { return null; }
                ;
            };
            MockApplicationRef = __decorate([
                di_1.Injectable(), 
                __metadata('design:paramtypes', [])
            ], MockApplicationRef);
            exports_1("MockApplicationRef", MockApplicationRef);
        }
    }
});
//# sourceMappingURL=mock_application_ref.js.map